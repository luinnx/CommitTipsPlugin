package com.luinnx.commit;import com.intellij.openapi.project.Project;import com.intellij.uiDesigner.core.GridConstraints;import com.intellij.uiDesigner.core.GridLayoutManager;import com.intellij.uiDesigner.core.Spacer;import com.luinnx.commit.model.BugAnalysisType;import com.luinnx.commit.model.BugFixedType;import com.luinnx.commit.model.ChangeType;import com.luinnx.commit.model.Commit;import java.awt.Dimension;import java.awt.Insets;import java.awt.event.ItemEvent;import javax.swing.DefaultComboBoxModel;import javax.swing.JComboBox;import javax.swing.JComponent;import javax.swing.JLabel;import javax.swing.JPanel;import javax.swing.JScrollPane;import javax.swing.JTextArea;import javax.swing.JTextField;public class CommitPanel {    Project project;    /**     * 提交类型     */    private JComboBox mTypeComboBox;    /**     * bug id     */    private JTextField mBugIdField;    /**     * 简要描述     */    private JTextField mSimpleField;    /**     * 详细描述     */    private JTextArea mDetailField;    /**     * 弹框主面板     */    private JPanel mainPanel;    private JTextField mRequirementIdField;    private JPanel mRequirementJPanel;    private JPanel mBugJPanel;    private JComboBox mBugFixedComboBox;    private JComboBox mBugAnalysisTypeComboBox;    private JLabel mBugScopeJlabel;    private JTextField mBugScopeField;    private JPanel mBugScopePanel;    private JLabel mBugReasonJlabel;    private JTextField mBugReasonField;    private JPanel mBugReasonPanel;    private JTextField mBugSolutionField;    private JPanel mSolutionPanel;    private JLabel mSolutionJlabel;    private JLabel mBugResultJlabel;    private JLabel mBugAnalysisJlabel;    private JLabel mRequirementDLabel;    private JPanel mSimplePanel;    private JLabel mSimpleFieldJlabel;    private JLabel mDetailJlabel;    public CommitPanel(Project project) {        this.project = project;        initView();        for (ChangeType type : ChangeType.values()) {            mTypeComboBox.addItem(type);        }        for (BugFixedType type : BugFixedType.values()) {            mBugFixedComboBox.addItem(type);        }        for (BugAnalysisType type : BugAnalysisType.values()) {            mBugAnalysisTypeComboBox.addItem(type);        }    }    public JPanel getMainPanel() {        return mainPanel;    }    public CommitMessage getCommitMessage() {        Commit commit = new Commit(                (ChangeType) mTypeComboBox.getSelectedItem(),                mBugIdField.getText().trim(),                (BugFixedType) mBugFixedComboBox.getSelectedItem(),                (BugAnalysisType) mBugAnalysisTypeComboBox.getSelectedItem(),                mRequirementIdField.getText().trim(),                mSimpleField.getText().trim(),                mBugReasonField.getText().trim(),                mBugSolutionField.getText().trim(),                mBugScopeField.getText().trim(),                mDetailField.getText().trim()        );        return new CommitMessage(commit);    }    public void initView() {        //bug 状态默认隐藏        mRequirementJPanel.setVisible(false);        mTypeComboBox.addItemListener(e -> {            if (e.getStateChange() == ItemEvent.SELECTED) {                if (e.getItem().toString().contains(ChangeType.BUG.title)) {                    mRequirementJPanel.setVisible(false);                    mRequirementIdField.setText("");                    //bug jpanel show                    mBugJPanel.setVisible(true);                    mBugReasonPanel.setVisible(true);                    mSolutionPanel.setVisible(true);                    mBugScopePanel.setVisible(true);                    mDetailField.setEditable(false);                } else if (e.getItem().toString().contains(ChangeType.REQUIREMENT.title)) {                    mRequirementJPanel.setVisible(true);                    mDetailField.setText("");                    mDetailField.setEditable(true);                    //bug hided                    mBugReasonPanel.setVisible(false);                    mBugReasonField.setText("");                    mSolutionPanel.setVisible(false);                    mBugSolutionField.setText("");                    mBugScopePanel.setVisible(false);                    mBugScopeField.setText("");                    mBugJPanel.setVisible(false);                    mBugIdField.setText("");                } else {                    // bug、Requirement hided                    mRequirementJPanel.setVisible(false);                    mRequirementIdField.setText("");                    mBugReasonPanel.setVisible(false);                    mBugReasonField.setText("");                    mSolutionPanel.setVisible(false);                    mBugSolutionField.setText("");                    mBugScopePanel.setVisible(false);                    mBugScopeField.setText("");                    mBugJPanel.setVisible(false);                    mBugIdField.setText("");                    mDetailField.setText("");                    mDetailField.setEditable(true);                }            }        });    }    {        // GUI initializer generated by IntelliJ IDEA GUI Designer        // >>> IMPORTANT!! <<<        // DO NOT EDIT OR ADD ANY CODE HERE!        $$$setupUI$$$();    }    /**     * Method generated by IntelliJ IDEA GUI Designer     * >>> IMPORTANT!! <<<     * DO NOT edit this method OR call it in your code!     *     * @noinspection ALL     */    private void $$$setupUI$$$() {        mainPanel = new JPanel();        mainPanel.setLayout(new GridLayoutManager(9, 2, new Insets(0, 0, 0, 0), -1, -1));        mainPanel.setMinimumSize(new Dimension(750, 300));        mainPanel.setPreferredSize(new Dimension(750, 300));        final JLabel label1 = new JLabel();        label1.setText("提交类型*");        mainPanel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));        final Spacer spacer1 = new Spacer();        mainPanel.add(spacer1, new GridConstraints(8, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));        mTypeComboBox = new JComboBox();        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();        mTypeComboBox.setModel(defaultComboBoxModel1);        mainPanel.add(mTypeComboBox, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));        mDetailJlabel = new JLabel();        mDetailJlabel.setText("详细描述");        mainPanel.add(mDetailJlabel, new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));        final JScrollPane scrollPane1 = new JScrollPane();        mainPanel.add(scrollPane1, new GridConstraints(7, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));        mDetailField = new JTextArea();        mDetailField.setLineWrap(true);        mDetailField.setWrapStyleWord(true);        scrollPane1.setViewportView(mDetailField);        mBugReasonPanel = new JPanel();        mBugReasonPanel.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));        mainPanel.add(mBugReasonPanel, new GridConstraints(4, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, true));        mBugReasonJlabel = new JLabel();        mBugReasonJlabel.setText("Bug产生原因*");        mBugReasonPanel.add(mBugReasonJlabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));        mBugReasonField = new JTextField();        mBugReasonField.setText("");        mBugReasonField.setToolTipText("");        mBugReasonPanel.add(mBugReasonField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));        mSolutionPanel = new JPanel();        mSolutionPanel.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));        mainPanel.add(mSolutionPanel, new GridConstraints(5, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, true));        mSolutionJlabel = new JLabel();        mSolutionJlabel.setText("解决方案*");        mSolutionPanel.add(mSolutionJlabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));        mBugSolutionField = new JTextField();        mBugSolutionField.setText("");        mBugSolutionField.setToolTipText("");        mSolutionPanel.add(mBugSolutionField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));        mBugScopePanel = new JPanel();        mBugScopePanel.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));        mainPanel.add(mBugScopePanel, new GridConstraints(6, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, true));        mBugScopeJlabel = new JLabel();        mBugScopeJlabel.setText("Bug影响范围*");        mBugScopePanel.add(mBugScopeJlabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));        mBugScopeField = new JTextField();        mBugScopeField.setText("");        mBugScopeField.setToolTipText("");        mBugScopePanel.add(mBugScopeField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));        mBugJPanel = new JPanel();        mBugJPanel.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));        mainPanel.add(mBugJPanel, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, true));        final JLabel label2 = new JLabel();        label2.setText("Bug ID *");        label2.setToolTipText("");        mBugJPanel.add(label2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));        final JPanel panel1 = new JPanel();        panel1.setLayout(new GridLayoutManager(1, 5, new Insets(0, 0, 0, 0), -1, -1));        mBugJPanel.add(panel1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));        mBugIdField = new JTextField();        mBugIdField.setText("");        mBugIdField.setToolTipText("输入Bug Id 如:MTXX-50850或50850");        panel1.add(mBugIdField, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(50, -1), null, 0, false));        mBugResultJlabel = new JLabel();        mBugResultJlabel.setText("Bug解决结果*");        panel1.add(mBugResultJlabel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));        mBugFixedComboBox = new JComboBox();        panel1.add(mBugFixedComboBox, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));        mBugAnalysisJlabel = new JLabel();        mBugAnalysisJlabel.setText("Bug分析*");        panel1.add(mBugAnalysisJlabel, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));        mBugAnalysisTypeComboBox = new JComboBox();        panel1.add(mBugAnalysisTypeComboBox, new GridConstraints(0, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));        mSimplePanel = new JPanel();        mSimplePanel.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));        mainPanel.add(mSimplePanel, new GridConstraints(3, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, true));        mSimpleFieldJlabel = new JLabel();        mSimpleFieldJlabel.setText("简要描述");        mSimplePanel.add(mSimpleFieldJlabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));        mSimpleField = new JTextField();        mSimpleField.setText("");        mSimpleField.setToolTipText("选填");        mSimplePanel.add(mSimpleField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));        mRequirementJPanel = new JPanel();        mRequirementJPanel.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));        mainPanel.add(mRequirementJPanel, new GridConstraints(2, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, true));        mRequirementDLabel = new JLabel();        mRequirementDLabel.setText("需求 ID");        mRequirementJPanel.add(mRequirementDLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));        mRequirementIdField = new JTextField();        mRequirementIdField.setText("");        mRequirementIdField.setToolTipText("输入需求Id 如:MTXX-50850或50850");        mRequirementJPanel.add(mRequirementIdField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));        final Spacer spacer2 = new Spacer();        mainPanel.add(spacer2, new GridConstraints(8, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));    }    /**     * @noinspection ALL     */    public JComponent $$$getRootComponent$$$() {        return mainPanel;    }}